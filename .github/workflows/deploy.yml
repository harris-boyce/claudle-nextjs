name: Deploy to Vercel

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test Application
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run type-check

      - name: Run lint
        run: npm run lint

      - name: Build application
        run: npm run build
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

  deploy-preview:
    runs-on: ubuntu-latest
    name: Deploy Preview
    needs: test
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "preview_url=$url" >> $GITHUB_OUTPUT

      - name: Comment Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Preview deployment ready!**\n\nâœ… Deploy URL: ${{ steps.deploy.outputs.preview_url }}\n\n---\n*ClaudLE Preview - Powered by Vercel*`
            })

  deploy-production:
    runs-on: ubuntu-latest
    name: Deploy Production
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} --env ANTHROPIC_API_KEY=$ANTHROPIC_API_KEY --env ENABLE_INTERACTIVE_COACHING=$ENABLE_INTERACTIVE_COACHING)
          echo "production_url=$url" >> $GITHUB_OUTPUT
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          ENABLE_INTERACTIVE_COACHING: true

      - name: Create Release
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const { data: release } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${new Date().toISOString().slice(0,10).replace(/-/g, '.')}`,
              name: `ClaudLE Release - ${new Date().toISOString().slice(0,10)}`,
              body: `ðŸŽ¯ **Production deployment successful!**\n\nðŸš€ Live URL: ${{ steps.deploy.outputs.production_url }}\n\n### Features:\n- AI-Enhanced Wordle\n- 10 Unique Themes\n- Ted Lasso & Roy Kent Coaching\n- Rate Limited API\n\n---\n*Deployed via GitHub Actions*`,
              draft: false,
              prerelease: false
            })

  lighthouse:
    runs-on: ubuntu-latest
    name: Lighthouse Performance Audit
    needs: deploy-preview
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ needs.deploy-preview.outputs.preview_url }}
          configPath: './lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true